{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGif.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","key","GifExpertApp","setCategory","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAahD,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAKd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,YCLdG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UACpDF,GAFmB,+DAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVjB,kBAadY,GAbc,4CAAH,sDCKPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdrB,mBAAS,CACjC2B,KAAM,CAAC,GACPO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAaxC,OARAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAACC,GACtBH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAGZ,CAACb,IACGc,EDVmBK,CAAanB,GAA/BM,EAD+B,EAC/BA,KAAMO,EADyB,EACzBA,QAQd,OAFAO,QAAQC,IAAIf,GACZc,QAAQC,IAAIR,GAEV,oCACE,4BAAKb,GACJa,GAAW,sCACZ,yBAAKjB,UAAU,aACZU,EAAKE,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAaa,IAAKb,EAAIhB,IAAQgB,UEhB3Bc,EAAe,WAAM,MAEA5C,mBAAS,CAAC,gBAFV,mBAEzBqB,EAFyB,KAEfwB,EAFe,KAMhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAa9C,cAAe8C,IAC5B,6BAEA,4BACGxB,EAASQ,KAAI,SAACR,GAAD,OACZ,kBAAC,EAAD,CAASA,SAAUA,EAAUsB,IAAKtB,UCb5CyB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.b0b1886d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setinputValue] = useState(\"\");\n  const handleInputChange = (e) => {\n    // console.log(e.target.value);\n    setinputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats]);\n      setinputValue(\"\");\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","import React from \"react\";\n\nexport const GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__bounce\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=rYbWT0gq9xLf215mqK82CPkvI1wbaell`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from \"react\";\nimport { GifGridItem } from \"./GifGridItem\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n//\n\nexport const GifGrid = ({ category }) => {\n  const { data, loading } = useFetchGifs(category);\n  /*   const [images, setImages] = useState([]);\n  // const [count, setCount] = useState(0);\n  */\n\n  //   getGifs();\n  console.log(data);\n  console.log(loading);\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading && <p>Loading</p>}\n      <div className=\"card-grid\">\n        {data.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGif\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [0],\n    loading: true,\n  });\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n  return state; //{data:[], loading:true}\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n  //   const categories = [\"One Punch\", \"Samurai X\", \"Dragon Ball\"];\n  const [category, setCategory] = useState([\"Dragon Ball\"]);\n  /*   const handleAdd = () => {\n    setcategory([...category, \"Amazon Prime\"]);\n  };*/\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategory} />\n      <hr />\n\n      <ol>\n        {category.map((category) => (\n          <GifGrid category={category} key={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}